#!/usr/bin/env joker

(ns wz-flow
  (:require [config :refer [load-config]]
            [git :refer [repo current-branch]]
            [git-flow]
            [github]
            [joker.string :as str]
            [joker.os :as os]))

(defn- exit [msg & args] (apply printf msg args) (os/exit -1))

(defn- exec-git-flow
  "Call git-flow command"
  [args]
  (let [{:keys [out err exit]} (os/exec "git-flow" {:args args})]
    (print (-> (if (str/blank? out) err out)
               (str/replace "git flow" "git wize-flow")))
    (os/exit exit)))

(def target-branch (git-flow/merge->branch current-branch))

(cond
  (= "version" (first *command-line-args*))
  (do (println "git-flow" git-flow/version)
      (println "wize-flow 0.0.1"))
  
  (not-any? #{"publish" "finish"} *command-line-args*)
  (exec-git-flow *command-line-args*)
  
  (not (git-flow/working-branch? current-branch))
  (exit "The current HEAD is no feature branch.")
  
  (= "publish" (first *command-line-args*))
  (let [{:keys [out err exit]} (os/exec "git-flow" {:args *command-line-args*})]
    (println (if (str/blank? out)
               err
               (str out "Open a PR: https://github.com/" (:owner repo) "/" (:name repo) "/compare/" target-branch "..." current-branch "?expand=1\n")))
    (os/exit exit))
  
  :else
  (let [{{:keys [token]} :github} (load-config)
        [status resp] (github/pull-requests token (:owner repo) (:name repo) current-branch target-branch)
        pr            (first resp)
        last-commit   (git/last-commit current-branch target-branch)
        pr-commits    (when pr (github/pull-request-commits token (:owner repo) (:name repo) (:number pr)))
        reviewers     (some->> pr
                               :requested_reviewers
                               (map :login)
                               (str/join ", "))]
    (cond
      (not= 200 status)
      (exit "GitHub %v\n%v\n\n" (:message resp) (:documentation_url resp))

      (or (empty? resp)
          (not (contains? pr-commits last-commit)))
      (exit "No PR has been created from %v -> %v on repo %v/%v.

Open a PR: https://github.com/%v/%v/compare/%v...%v?expand=1

"           current-branch target-branch (:owner repo) (:name repo)
            (:owner repo) (:name repo) target-branch current-branch)

      (nil? (:merged_at pr))
      (exit "The PR #%v on repo %v/%v has not been merged yet.

Url:       %v
State:     %v
Reviewers: %v

"           (:number pr) (:owner repo) (:name repo)
            (:html_url pr) (:state pr) reviewers)
      
      :else
      (do (git/sync-base current-branch target-branch)
          (when (not= git-flow/develop-branch target-branch)
            (git/sync-base current-branch git-flow/develop-branch))
          (exec-git-flow *command-line-args*)))))
