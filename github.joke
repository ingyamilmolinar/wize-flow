(ns github
  (:require [joker.base64 :as base64]
            [joker.json :as json]
            [joker.http :as http]
            [joker.time :as t]))

(def base-url "https://api.github.com")

(defn personal-access-token
  "Create a personal access token
  https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization"
  [user pass otp]
  (let [auth                  (base64/encode-string (str user ":" pass))
        token-name            (str "wz-flow " (t/format (t/now) t/rfc3339-nano))
        {:keys [status body]} (http/send {:url (str base-url "/authorizations")
                                          :method :post
                                          :headers {"Authorization" (str "Basic " auth)
                                                    "Content-Type" "application/json"
                                                    "X-GitHub-OTP" otp}
                                          :body (json/write-string {:scopes ["repo"]
                                                                    :note token-name})})]
    [status (json/read-string body)]))

(defn pull-requests
  "Get the PRs from head -> base, order by created desc"
  [token owner repo head base]
  (let [{:keys [status body]} (http/send {:url (format "%s/repos/%s/%s/pulls?state=all&head=%s:%s&base=%s" base-url owner repo owner head base)
                                          :headers {"Authorization" (str "token " token)}})]
    [status (json/read-string body)]))
